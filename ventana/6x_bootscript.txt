setenv bootargs enable_wait_mode=off
setenv nextcon 0
setenv bootargs $bootargs console=ttymxc1,115200 vmalloc=400M consoleblank=0

if test -n "$tempfuse" ; then
	setenv bootargs $bootargs thermal.fusedata=$tempfuse
fi

i2c dev 2
if i2c probe 0x04 ; then
	setenv bootargs $bootargs video=mxcfb${nextcon}:dev=ldb,bpp=32,LDB-XGA,if=RGB666
	if test "0" -eq $nextcon; then
		setenv fbmem "fbmem=20M";
	else
		setenv fbmem ${fbmem},20M
	fi
	setexpr nextcon $nextcon + 1
else
	echo "------ no Freescale display";
fi

if hdmidet ; then
	setenv bootargs $bootargs video=mxcfb${nextcon}:dev=hdmi,bpp=32,1280x720M@60,if=RGB24
	if test "0" -eq $nextcon; then
		setenv fbmem "fbmem=48M";
	else
		setenv fbmem ${fbmem},48M
	fi
	setexpr nextcon $nextcon + 1
else
	echo "------ no HDMI monitor";
fi

while test "4" -ne $nextcon ; do
	setenv bootargs $bootargs video=mxcfb${nextcon}:off ;
	setexpr nextcon $nextcon + 1 ;
done

test -n "$fs"    || fs=ext2
test -n "$disk"  || disk=0

if test -n "$dtype" ; then
	echo "booting from $dtype"
else
	echo "Detecting boot device (dtype)..."
	if ${fs}load usb ${disk}:1 10800000 boot/uImage ; then
		dtype=usb
	elif ${fs}load mmc ${disk}:1 10800000 boot/uImage ; then
		dtype=mmc
	elif ${fs}load sata ${disk}:1 10800000 boot/uImage ; then
		dtype=sata
	fi
	echo "dtype:$dtype"
fi
if test -n "$bootdev" ; then
	echo "Using androidboot.bootdev=$bootdev"
else
	if itest.s "x${dtype}" == "xusb" ; then
		if test -n "$usbdevport" ; then
			bootdev=fsl-ehci.${usbdevport}
			if itest "${usbdevport}" == 0 ; then
				echo "USB0: OTG"
			elif itest "${usbdevport}" == 1 ; then
				echo "USB1: EHCI"
			else
				echo "Unsuported USB host controller:$usbdevport"
			fi
		else
			bootdev=fsl-ehci.1
		fi
	elif itest.s "x${dtype}" == "xmmc" ; then
		bootdev=sdhci-esdhc-imx.2
	elif itest.s "x${dtype}" == "xsata" ; then
		bootdev=ahci.0
	else
		echo "Unsupported dtype:${dtype}"
	fi
	echo "androidboot.bootdev=$bootdev"
fi

setenv bootargs $bootargs androidboot.hardware=freescale androidboot.bootdev=$bootdev ${extra}

${fs}load ${dtype} ${disk}:1 10800000 boot/uImage && ${fs}load ${dtype} ${disk}:1 12800000 boot/uramdisk.img && bootm 10800000 12800000

echo "Error loading kernel image"

From ae614df8fd717607d14bc4888153189377be6cc3 Mon Sep 17 00:00:00 2001
From: Tim Harvey <tharvey@gateworks.com>
Date: Sun, 24 Nov 2013 22:49:26 -0800
Subject: [PATCH] add sgtl5000 codec support


Signed-off-by: Tim Harvey <tharvey@gateworks.com>
---
 alsa/config_sgtl5000.h |   66 ++++++++++++++++++++++++++++++++++++++++++++++++
 alsa/tinyalsa_hal.c    |    8 +++---
 2 files changed, 71 insertions(+), 3 deletions(-)
 create mode 100644 alsa/config_sgtl5000.h

diff --git a/alsa/config_sgtl5000.h b/alsa/config_sgtl5000.h
new file mode 100644
index 0000000..e71b101
--- /dev/null
+++ b/alsa/config_sgtl5000.h
@@ -0,0 +1,66 @@
+/*
+ * Copyright (C) 2011 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+/* Copyright (C) 2012 Freescale Semiconductor, Inc. */
+
+#ifndef ANDROID_INCLUDE_IMX_CONFIG_SGTL5000_H
+#define ANDROID_INCLUDE_IMX_CONFIG_SGTL5000_H
+
+#include "audio_hardware.h"
+
+
+#define MIXER_SGTL5000_SPEAKER_VOLUME                 "Speaker Volume"
+
+/* These are values that never change */
+static struct route_setting defaults_SGTL5000[] = {
+    /* general */
+    {
+        .ctl_name = MIXER_SGTL5000_SPEAKER_VOLUME,
+        .intval = 96,
+    },
+    {
+        .ctl_name = NULL,
+    },
+};
+
+/* ALSA cards for IMX, these must be defined according different board / kernel config*/
+static struct audio_card  sgtl5000_card = {
+    .name = "sgtl5000-audio",
+    .driver_name = "sgtl5000-audio",
+    .supported_out_devices = (AUDIO_DEVICE_OUT_SPEAKER |
+            AUDIO_DEVICE_OUT_WIRED_HEADPHONE |
+            AUDIO_DEVICE_OUT_DEFAULT),
+    .supported_in_devices = AUDIO_DEVICE_IN_WIRED_HEADSET,
+    .defaults            = defaults_SGTL5000,
+    .bt_output           = 0,
+    .speaker_output      = 0,
+    .hs_output           = 0,
+    .earpiece_output     = 0,
+    .vx_hs_mic_input     = 0,
+    .mm_main_mic_input   = 0,
+    .vx_main_mic_input   = 0,
+    .mm_hs_mic_input     = 0,
+    .vx_bt_mic_input     = 0,
+    .mm_bt_mic_input     = 0,
+    .card                = 0,
+    .out_rate            = 0,
+    .out_channels        = 0,
+    .out_format          = 0,
+    .in_rate             = 0,
+    .in_channels         = 0,
+    .in_format           = 0,
+};
+
+#endif  /* ANDROID_INCLUDE_IMX_CONFIG_SGTL5000_H */
diff --git a/alsa/tinyalsa_hal.c b/alsa/tinyalsa_hal.c
index d16a55a..1b1ee8c 100644
--- a/alsa/tinyalsa_hal.c
+++ b/alsa/tinyalsa_hal.c
@@ -39,6 +39,7 @@
 #include <audio_effects/effect_aec.h>
 
 #include "audio_hardware.h"
+#include "config_sgtl5000.h"
 #include "config_wm8962.h"
 #include "config_wm8958.h"
 #include "config_hdmi.h"
@@ -91,10 +92,10 @@
 #define PRODUCT_NAME_PROPERTY   "ro.product.name"
 #define PRODUCT_DEVICE_IMX      "imx"
 #define PRODUCT_DEVICE_AUTO     "sabreauto"
-#define SUPPORT_CARD_NUM        7
 
 /*"null_card" must be in the end of this array*/
-struct audio_card *audio_card_list[SUPPORT_CARD_NUM] = {
+struct audio_card *audio_card_list[] = {
+		&sgtl5000_card,
     &wm8958_card,
     &wm8962_card,
     &hdmi_card,
@@ -103,6 +104,7 @@ struct audio_card *audio_card_list[SUPPORT_CARD_NUM] = {
     &cs42888_card,
     &null_card,
 };
+#define SUPPORT_CARD_NUM       ((int)(sizeof(audio_card_list)/sizeof(audio_card_list[0])))
 
 struct pcm_config pcm_config_mm_out = {
     .channels = 2,
@@ -3040,7 +3042,7 @@ static int scan_available_device(struct imx_audio_device *adev, bool rescanusb)
         ALOGW("card %d, id %s ,driver %s, name %s", i, control_card_info_get_id(imx_control),
                                                       control_card_info_get_driver(imx_control),
                                                       control_card_info_get_name(imx_control));
-        for(j = 0; j < SUPPORT_CARD_NUM; j++) {
+        for(j = 0; j < (int)SUPPORT_CARD_NUM; j++) {
             if(strstr(control_card_info_get_driver(imx_control), audio_card_list[j]->driver_name) != NULL){
                 // check if the device have been scaned before
                 scanned = false;
-- 
1.7.9.5

